
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
        this.setTitle("Temporizador");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelTime = new javax.swing.JLabel();
        jLabelModo = new javax.swing.JLabel();
        jTextFieldDias = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldHoras = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldMinutos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldSegundos = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCheckBoxForzar = new javax.swing.JCheckBox();
        jComboBoxModo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setToolTipText("Configurar una hora");
        jPanel1.setEnabled(false);
        jPanel1.setMaximumSize(new java.awt.Dimension(270, 306));
        jPanel1.setMinimumSize(new java.awt.Dimension(270, 306));
        jPanel1.setName("APAGAME"); // NOI18N

        jLabelTime.setFont(new java.awt.Font("Digiface", 0, 36)); // NOI18N
        jLabelTime.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTime.setText("00:00:00");
        jLabelTime.setToolTipText("Tiempo restante. Click para Ruta");
        jLabelTime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelTimeMouseClicked(evt);
            }
        });

        jLabelModo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelModo.setText("Tiempo restante:");

        jTextFieldDias.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDias.setToolTipText("Número de días");

        jLabel6.setText("Días");

        jTextFieldHoras.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldHoras.setToolTipText("Número de horas");

        jLabel5.setText("Horas");

        jTextFieldMinutos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldMinutos.setToolTipText("Número de minutos");

        jLabel3.setText("Minutos");

        jTextFieldSegundos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldSegundos.setToolTipText("Número de segundos");

        jLabel4.setText("Segundos");

        jCheckBoxForzar.setSelected(true);
        jCheckBoxForzar.setText("Forzar");
        jCheckBoxForzar.setToolTipText("Forzar la ejecución de la orden");

        jComboBoxModo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Apagar", "Reiniciar", "Hibernar", "Cerrar sesion", "Ejecutar" }));
        jComboBoxModo.setToolTipText("Seleccionar una orden");
        jComboBoxModo.setName("select"); // NOI18N
        jComboBoxModo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 51, 51));
        jButton1.setText("Ejecutar");
        jButton1.setToolTipText("Iniciar la configuración");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.setToolTipText("Cancelar la orden");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Github.com/ourenseko");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelModo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBoxModo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBoxForzar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldDias, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6)
                                        .addGap(26, 26, 26))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldHoras, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(jTextFieldSegundos))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(7, 7, 7))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTime, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                        .addContainerGap(20, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelModo)
                .addGap(18, 18, 18)
                .addComponent(jLabelTime)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldHoras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSegundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldMinutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxModo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxForzar))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        try {
            t.stop(); //PARA EVITAR EL BUGEO EN TIMER SI YA SE HA EJECUTADO
            jLabelTime.setText("00:00:00");
        } catch (Exception e) {
        }
        
        
        
        String argModo = "-i";
        switch(String.valueOf(jComboBoxModo.getSelectedItem())){
            case "Apagar":
            argModo = "-s";
            break;
            case "Reiniciar":
            argModo = "-r";
            break;
            case "Hibernar":
            argModo = "-h";
            break;
            case "Cerrar sesion":
            argModo = "-l";
            break;
            default:
                argModo = "-a";
            ;
        }

        String argSegundos = "0";
        String inputDias = jTextFieldDias.getText().equals("") ? "0" : jTextFieldDias.getText();
        String inputHoras = jTextFieldHoras.getText().equals("") ? "0" : jTextFieldHoras.getText();
        String inputMinutos = jTextFieldMinutos.getText().equals("") ? "0" : jTextFieldMinutos.getText();
        String inputSegundos = jTextFieldSegundos.getText().equals("") ? "0" : jTextFieldSegundos.getText();
        String argForzar = jCheckBoxForzar.isSelected() ? "-f" : "";
        
        int dias=0, horas=0, minutos=0, segundos=0, segundosTotal=0; //necesitamos que esté fuera del try para acceder en su forma Integer
        try {
             dias = Integer.parseInt(inputDias);
             horas = Integer.parseInt(inputHoras);
             minutos = Integer.parseInt(inputMinutos);
             segundos = Integer.parseInt(inputSegundos);
            
            segundosTotal = dias*24*3600 + horas*3600 + minutos*60 + segundos;
            argSegundos = Integer.toString(segundosTotal);
            System.out.println("Set "+argSegundos+" to remain");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Solo números");
        }
        
        //Muestra el modo
        jLabelModo.setText(String.valueOf(jComboBoxModo.getSelectedItem())+" en:");
        
        
            
        
        //CMD
        if (!argModo.equals("-a")){
            if(segundosTotal<=0){
                argSegundos = "0";
            }
            try {
                String [] cmd = {"shutdown ",argModo," ",argForzar," -t ",argSegundos};
                Runtime.getRuntime().exec(cmd);
                System.out.println("shutdown "+argModo+" "+argForzar+" -t "+argSegundos);

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error al ejecutar.");
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            jLabelModo.setText("Ejecutar: "+ruta);
        }
        
        /** MOSTRAR EL TIEMPO RESTANTE EN 00:00:00
         * timestamp actual + segundos totales = timestamp cuando se ejecuta = timestamp final
         * timestamp cuando se ejecuta - timestamp actual =  segundos restantes
         * segundos restantes => mostrar en horas minutos y segundos
         */    

        int timestampFinal = (int) System.currentTimeMillis() + segundosTotal*1000 -3600000; //3600 000 para arreglar que añade 1h  si se pone más de 60 segundos
        
        // TIMER
        t = null;
        t = new Timer(1000,new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                
                int timestampActual = (int) System.currentTimeMillis();
                int timestampRemain = timestampFinal - timestampActual;

                SimpleDateFormat formatter= new SimpleDateFormat("HH:mm:ss"); //("yyyy-MM-dd 'at' HH:mm:ss z")
                Date date = new Date(timestampRemain);
                
                jLabelTime.setText( formatter.format(date) );
                
                
                if(jLabelTime.getText().equals("00:00:00")){
                    try {
                        t.stop(); //EN EL CASO DE APAGADO, REINICIADO, ETC. ES PURA ANIMACIÓN Y LO DETENEMOS AL LLEGAR A 00:00:00
                        jLabelTime.setText("00:00:00");
                    } catch (Exception eee) {}    
                }
                else if ( jLabelTime.getText().equals("00:00:00") && String.valueOf(jComboBoxModo.getSelectedItem()).equals("Ejecutar")){
                    /* BUG A CAUSA DE UN elseIF POCO PRECISO
                     * Si ponemos más de un día para "Ejecutar" tendremos un bug, ya que el temporizador pasará por 00:00:00 antes de ponerse 23:59:59
                     * Esto se puede solucionar picando más código haciendo un if más especifico y complejo.
                    */
                    
                    try {
                        String [] cmd = {"start ",ruta};
                        Runtime.getRuntime().exec(cmd);
                        System.out.println("start "+ruta);
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, "Error al ejecutar.");
                        Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                    }finally{
                        try {
                            t.stop(); //LO DETENEMOS
                            jLabelTime.setText("00:00:00");
                        } catch (Exception ee) {}
                    }
                    
                }
                
                /***
                 * System.out.println("Printing statement after every second");
                 * t.stop(); // if you want only one print uncomment this line
                ***/
            }
        });
        java.util.Timer tt = new java.util.Timer(false);
        tt.schedule(new TimerTask() {
            @Override
            public void run() {
                t.start();
            }
        }, 0);
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        try {
            String [] cmd = {"shutdown", "-a"};
            Runtime.getRuntime().exec(cmd);
            System.out.println("shutdown -a");
            jLabelModo.setText("**Cancelado**");
            t.stop(); // DETIENE EL TIMER
            jLabelTime.setText("00:00:00");
            JOptionPane.showMessageDialog(null, "Programado cancelado.");
        } catch (IOException e) {
            System.out.println(e);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    private void jComboBoxModoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxModoActionPerformed

    String ruta;
    int bucle;
    private void jLabelTimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelTimeMouseClicked
        // TODO add your handling code here:
        
        //Mostramos un input dialog preguntando la aplicacion a ejecutar
        ruta = JOptionPane.showInputDialog("Ruta absoluta:");
        jLabelModo.setText("Ruta: "+ruta);
        bucle = JOptionPane.showConfirmDialog(null, "¿Ejecutar en bucle?", null, JOptionPane.YES_OPTION, JOptionPane.NO_OPTION);
        System.out.println("Set bucle: "+bucle); // 0:si ; 1:no
        // Falta implementar el código del bucle en el timer para que se reinicie con el mismo tiempo
        
    }//GEN-LAST:event_jLabelTimeMouseClicked

    /**
     * @param args the command line arguments
     */
    
    private static javax.swing.Timer t;  /*** PARA QUE FUNCIONE EL TIMER EN LA ETIQUETA ***/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
        
       
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBoxForzar;
    private javax.swing.JComboBox<String> jComboBoxModo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelModo;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldDias;
    private javax.swing.JTextField jTextFieldHoras;
    private javax.swing.JTextField jTextFieldMinutos;
    private javax.swing.JTextField jTextFieldSegundos;
    // End of variables declaration//GEN-END:variables
}
